plugins {
  id 'com.github.johnrengelman.shadow' version '6.1.0'
}

apply plugin: 'java'
apply plugin: 'idea'

sourceCompatibility = 11
targetCompatibility = 11
sourceSets.main.java.srcDirs = ['src']
sourceSets.main.java.outputDir = file('bin')
sourceSets.test.java.srcDirs = ['test/src']
// buildDir = 'build'

wrapper {
  gradleVersion = '7.1.1'
}

task delombok(type: Exec, dependsOn: compileJava) {
  doFirst {
    def sourceDirName = "build/delombok/src"
    def srcDir = file(sourceDirName)
    srcDir.deleteDir()
    srcDir.mkdir()
  }
  if (System.properties['os.name'].toLowerCase().contains('windows')) {
    commandLine "powershell", "-Command", "java", "-jar", "\"lib\\lombok-1.18.24.jar\"", "delombok", "src", "--classpath", "\"build\\libs\\jisd-all.jar;lib\\lombok-1.18.24.jar\"", "-d", "build/delombok/src"
  } else {
    commandLine "java", "-jar", "lib/lombok-1.18.24.jar", "delombok", "src", "--classpath", "build/libs/jisd-all.jar:lib/lombok-1.18.24.jar", "-d", "build/delombok/src"
  }
}

javadoc {
  dependsOn delombok
  def sourceDirName = "build/delombok/src"
  source = sourceDirName
  exclude('jisd/demo/**')
  exclude('jisd/util/**')
  destinationDir = file("../javadoc/docs")
  failOnError = true
  options.locale = "en_US"
  options.setMemberLevel(JavadocMemberLevel.PUBLIC)
  options.addStringOption('Xdoclint:none', '-quiet')
  doLast {
    copy {
      from "../javadoc/.nojekyll"
      into "../javadoc/docs"
    }
  }
}

jar {
  archiveBaseName = 'jisd-with-fl'
  archiveVersion = '0.2.5'
  exclude('.jisd_static_data*')
}

shadowJar {
  dependsOn jar
  exclude('jisd/demo/**')
  exclude('.jisd_static_data*')
}

task release {
  dependsOn javadoc
  dependsOn shadowJar
}

test {
  useJUnitPlatform()
}

repositories {
  mavenCentral()
}

dependencies {
   //junit4
    // https://mvnrepository.com/artifact/junit/junit
    implementation 'junit:junit:4.13.2'

    //Junit5
    // https://mvnrepository.com/artifact/org.junit.platform/junit-platform-launcher
    implementation 'org.junit.platform:junit-platform-launcher:1.10.0'
    // https://mvnrepository.com/artifact/org.junit.platform/junit-platform-engine
    implementation 'org.junit.platform:junit-platform-engine:1.10.0'
    // https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-engine
    implementation 'org.junit.jupiter:junit-jupiter-engine:5.10.0'
    // https://mvnrepository.com/artifact/org.junit.vintage/junit-vintage-engine
    implementation 'org.junit.vintage:junit-vintage-engine:5.10.0'

    //parser
    implementation 'com.github.javaparser:javaparser-core:3.19.0'

    //coverage
    // https://mvnrepository.com/artifact/org.jacoco/org.jacoco.core
    implementation 'org.jacoco:org.jacoco.core:0.8.12'
    // https://mvnrepository.com/artifact/org.ow2.asm/asm
    //implementation 'org.ow2.asm:asm:9.7.1'

    //utility
    implementation "org.apache.commons:commons-lang3:3.10"

    //for test
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'

  // https://mvnrepository.com/artifact/org.ow2.asm/asm
  implementation 'org.ow2.asm:asm:9.0'

  // https://mvnrepository.com/artifact/org.ow2.asm/asm-tree
  implementation 'org.ow2.asm:asm-tree:9.0'

  // https://mvnrepository.com/artifact/org.json/json
  implementation 'org.json:json:20171018'

  // https://mvnrepository.com/artifact/commons-io/commons-io
  implementation 'commons-io:commons-io:2.8.0'

  // flacoco
  implementation 'com.github.spoonlabs:flacoco:1.0.5'

  // https://mvnrepository.com/artifact/fr.inria.gforge.spoon/spoon-core
  implementation 'fr.inria.gforge.spoon:spoon-core:10.2.0'

  // jisdvis
  implementation 'io.prometheus:simpleclient:0.11.0'
  implementation 'io.prometheus:simpleclient_hotspot:0.11.0'
  implementation 'io.prometheus:simpleclient_httpserver:0.11.0'
  implementation 'io.prometheus:simpleclient_servlet:0.11.0'

  // undertow server
  implementation 'io.undertow:undertow-servlet:2.2.8.Final'
  implementation 'org.jboss.resteasy:resteasy-undertow:4.5.12.Final'
  implementation 'org.jboss.resteasy:resteasy-servlet-initializer:4.5.12.Final'

  // jdiscript
  implementation files('../jdiscript/jdiscript/build/libs/jdiscript-0.9.0.jar')

  // https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api
  testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'
  testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.6.2'

  // https://mvnrepository.com/artifact/org.projectlombok/lombok
  implementation 'org.projectlombok:lombok:1.18.24'
  annotationProcessor 'org.projectlombok:lombok:1.18.24'

  testCompileOnly 'org.projectlombok:lombok:1.18.24'
  testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'

}

task createKernelJson(type: JavaExec) {
  main = "jisd.util.JISDPreProcess"
  classpath = sourceSets.main.runtimeClasspath
  def path = project.hasProperty("jsonpath") ? project.property("jsonpath") : ""
  def cp = project.hasProperty("cp") ? project.property("cp") : ""
  args(path, path, cp)
}

tasks.withType(JavaCompile) {
  options.compilerArgs << '-Xlint:unchecked'
}
